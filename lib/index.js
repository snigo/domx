function e(b){"@babel/helpers - typeof";e="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"===typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a};return e(b)}
export function setCSSVariables(b,a){b&&a&&"object"===e(b)&&"object"===e(a)&&(Array.isArray(a)||(a=Object.entries(a)),"style"in b&&"setProperty"in b.style&&a.forEach(function(a){var c=Array.isArray(a)?a:void 0;if(!c)if(Symbol.iterator in Object(a)||"[object Arguments]"===Object.prototype.toString.call(a)){c=[];var f=!0,g=!1,h=void 0;try{for(var d=a[Symbol.iterator](),k;!(f=(k=d.next()).done)&&(c.push(k.value),2!==c.length);f=!0);}catch(l){g=!0,h=l}finally{try{if(!f&&null!=d["return"])d["return"]()}finally{if(g)throw h;
}}}else c=void 0;if(!(a=c))throw new TypeError("Invalid attempt to destructure non-iterable instance");d=a[1];b.style.setProperty("--".concat(a[0]),d)}))}
